Sampling_3 == Sampling_3[Study == study_nm]
Sampling_3[Study == study_nm]
rma_loo <- list(rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm)),
rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Confidence == Confidence[Study == study_nm]),
rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Sampling_3 == Sampling_3[Study == study_nm]))
rma_loo <- list(overall = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm)),
confidence = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Confidence == Confidence[Study == study_nm]),
sampling = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Sampling_3 == Sampling_3[Study == study_nm]))
rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm))
rma_loo <- list(overall = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm)))
rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Confidence == Confidence[Study == study_nm])
betas %>% filter(Study != study_nm)
Confidence[Study == study_nm]
Confidence == Confidence[Study == study_nm])
test <- betas %>% filter(Study != study_nm)
subset(test, Confidence == Confidence[Study == study_nm])
study_nm <- loo$Study[ind]
study_confidence <- Confidence[Study == study_nm]
study_sampling <- Sampling_3 == Sampling_3[Study == study_nm]
study_confidence
rma_loo <- list(overall = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm)),
confidence = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Confidence == study_confidence),
sampling = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Sampling_3 == study_sampling))
study_nm <- loo$Study[ind]
study_confidence <- Confidence[Study == study_nm]
study_sampling <- Sampling_3 == Sampling_3[Study == study_nm]
rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Confidence == study_confidence)
study_sampling
study_sampling <- Sampling_3[Study == study_nm]
rma_loo <- list(overall = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm)),
confidence = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Confidence == study_confidence),
sampling = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Study != study_nm), subset = Sampling_3 == study_sampling))
rbind(
print_results("Overall", rma_loo[[1]], betas %>% filter(Study != study_nm))
)
rbind(
print_results("Overall", rma_loo[[1]], betas %>% filter(Study != study_nm)),
print_results(study_confidence, rma_loo[[2]], betas %>% filter(Study != study_nm))
)
rbind(
print_results("Overall", rma_loo[[1]], betas %>% filter(Study != study_nm)),
print_results(study_confidence, rma_loo[[2]], betas %>% filter(Study != study_nm) %>% filter(Sampling_3 == study_confidence))
)
betas %>% filter(Study != study_nm)
rbind(
print_results("Overall", rma_loo[[1]], betas %>% filter(Study != study_nm)),
print_results(study_confidence, rma_loo[[2]], betas %>% filter(Study != study_nm) %>% filter(Confidence == study_confidence))
)
rbind(
print_results("Overall", rma_loo[[1]], betas %>% filter(Study != study_nm)),
print_results(study_confidence, rma_loo[[2]], betas %>% filter(Study != study_nm) %>% filter(Confidence == study_confidence)),
print_results(study_sampling, rma_loo[[3]], betas %>% filter(Study != study_nm) %>% filter(Sampling_3 == study_sampling))
)
?toupper
?levels
knitr::opts_chunk$set(echo = params$print_code,
warning = FALSE,
tidy = TRUE) #tidy.opts = list(width.cutoff = 60), # if word_document
#rmarkdown::render(output_file = paste0("Meta_Analysis_", pfas, ".pdf"))
library(readxl)
library(tidyr)
library(tidyverse)
library(dplyr)
library(metafor)
library(meta)
library(knitr)
library(kableExtra)
library(ggplot2)
library(RColorBrewer)
library(formatR)
source("utility_functions.R")
pfas_type = "PFNA"
if (pfas_type == "PFNA") {
betas <- read.csv("betas_pfna.csv")
} else if (pfas_type == "PFHxS") {
betas <- read.csv("betas_pfhxs.csv")
}
attach(betas)
rma_overall <- rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, slab = Study)
print_results("Overall", rma_overall, betas) %>% kable(format = 'pandoc')
plot_df <- betas %>%
#mutate(SampleTiming = fct_recode(Sampling_3, Early = "early", Late = "late", Post = "post")) %>%
mutate(SampleTiming = fct_recode(Bin, `1st` = "T1", `1st-2nd` = "T1-T2",
`2nd-3rd` = "T2-T3", `3rd` = "T3", `Birth` = "B", `Post-Birth` = "PB",
`Pre-Conception` = "PC"),
Confidence = factor(Confidence, levels = c("High", "Medium", "Low")))
levels(plot_df$SampleTiming)
plot_df <- betas %>%
#mutate(SampleTiming = fct_recode(Sampling_3, Early = "early", Late = "late", Post = "post")) %>%
mutate(SampleTiming = fct_recode(Bin, `1st` = "T1", `1st-2nd` = "T1-T2",
`2nd-3rd` = "T2-T3", `3rd` = "T3", `Birth` = "B", `Post-Birth` = "PB",
`Pre-Conception` = "PC"),
Confidence = factor(Confidence, levels = c("High", "Medium", "Low")))
# TODO: reorder factor levels - use levels(); search in old code
levels(plot_df$SampleTiming) <- c("Pre-Conception", "1st", "1st-2nd", "2nd-3rd", "3rd", "Birth", "Post-Birth")
forest(rma_overall,
cex = .55,
level = 95,
digits = 1L,
xlim = c(-1100, 500),
alim = c(-200, 200),
order = order(plot_df$Confidence, plot_df$SampleTiming, -plot_df$Sample.Size),
header = "Study",
ilab = cbind(as.character(plot_df$Confidence),
as.character(plot_df$SampleTiming),
plot_df$Sample.Size),
ilab.xpos = c(-650, -500, -350),
slab = plot_df$Study,
xlab = NULL,
mlab = modify_label(rma_overall, "All Studies, RE Model"))
p <- par(cex = .55, font=2)
text(c(-650, -500, -350), length(Study)+2, c("Confidence", "Timing", "N"))
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame()
names(betas_kwon)
# pull in dataset with kwon2; tidy like the betas;
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
View(betas_kwon)
betas_kwon$BetaUnit
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)")) %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
betas_kwon
betas <- read.csv("betas_pfna.csv") %>%
bind_rows(betas_kwon)
betas
betas <- read.csv("betas_pfna.csv")
matrix(names(betas))
matrix(names(betas_kwon))
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
# join sample timing data to betas
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas <- betas_kwon %>%
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3))
matrix(names(betas_kwon))
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
# join sample timing data to betas
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas_kwon <- betas_kwon %>%
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3))
matrix(names(betas_kwon))
betas <- read.csv("betas_pfna.csv") %>%
bind_rows(betas_kwon)
View(betas)
library(readxl)
library(tidyr)
library(tidyverse)
library(dplyr)
library(metafor)
library(meta)
library(knitr)
library(kableExtra)
library(ggplot2)
library(RColorBrewer)
setwd("C:/Users/alarsen/OneDrive - Environmental Protection Agency (EPA)/Projects/IRIS/PFAS/pfas-birthweight-meta-analysis")
source("utility_functions.R")
betas <- read_excel("PFNA_Unit_Conversion_v6.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
mutate(across(c("Study", "Year"), str_replace, " Boy", "a")) %>%
mutate(across(c("Study", "Year"), str_replace, " Girl", "b")) %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
# pool studies that report boys and girls separately
betas <- betas %>%
pool_studies("Lind") %>%
pool_studies("Robledo") %>%
pool_studies("Wang")
# join sample timing data to betas
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas <- betas  %>%     ## PFNA
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3))
#View(betas)
write.csv(betas, "betas_pfna.csv", row.names = F)
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2, Sample.Size = `Sample Size`) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
# join sample timing data to betas
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas_kwon <- betas_kwon %>%
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3))
betas <- read.csv("betas_pfna.csv") %>%
bind_rows(betas_kwon)
View(betas)
betas %>% filter(Author == "Kwon" & BetaUnit == "g/ln(ng/ml)")
names(beta)
names(betas)
betas %>% filter(Study == "Kwon, 2016" & BetaUnit == "g/ln(ng/ml)")
betas %>% filter(Study == "Kwon, 2016" & BetaUnit == "g/ln(ng/ml)")
betas %>% select(-(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))
?select
betas %>% filter(-(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))
betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))
test <- betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))
View(test)
unique(betas$BetaUnit)
test <- betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))
View(test)
test <- betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)"))
View(test)
rma_kwon <- list(log_e = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))),
log_2 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))),
log_10 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)"))))
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2, Sample.Size = `Sample Size`) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas_kwon <- betas_kwon %>%
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3)) %>%
bind_rows(read.csv("betas_pfna.csv"))
write.csv(betas_kwon, "betas_pfna_kwon_options.csv")
if (pfna_type == "PFNA") {
betas_kwon <- read.csv("betas_pfna_kwon_options.csv")
rma_kwon <- list(log_e = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))),
log_2 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))),
log_10 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)"))))
rbind(
print_results("log_e", rma_kwon[[1]], betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))),
print_results("log_2", rma_loo[[2]], betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))),
print_results("log_10", rma_loo[[3]], betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)")))
) %>% kable(format = 'pandoc')
} else {
print("PFNA is not the chemical of interest - no analysis needed.")
}
sprintf("PFNA is not the chemical of interest; this analysis is not needed for %s.", pfas_type)
if (pfas_type == "PFNA") {
betas_kwon <- read.csv("betas_pfna_kwon_options.csv")
rma_kwon <- list(log_e = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))),
log_2 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))),
log_10 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)"))),
medium = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(!(Study == "Kwon, 2016")), subset = Confidence == Confidence[Study == "Kwon, 2016"] ))
}
betas %>% filter(!(Study == "Kwon, 2016"))
betas %>% filter(!(Study == "Kwon, 2016")) %>% filter(Confidence == Confidence[Study == "Kwon, 2016"])
Confidence[Study == "Kwon, 2016"]
betas %>% filter(Confidence == Confidence[Study == "Kwon, 2016"])
knitr::opts_chunk$set(echo = params$print_code,
warning = FALSE,
tidy = TRUE) #tidy.opts = list(width.cutoff = 60), # if word_document
#rmarkdown::render(output_file = paste0("Meta_Analysis_", pfas, ".pdf"))
library(readxl)
library(tidyr)
library(tidyverse)
library(dplyr)
library(metafor)
library(meta)
library(knitr)
library(kableExtra)
library(ggplot2)
library(RColorBrewer)
library(formatR)
source("utility_functions.R")
pfas_type = "PFNA"
if (pfas_type == "PFNA") {
betas <- read.csv("betas_pfna.csv")
} else if (pfas_type == "PFHxS") {
betas <- read.csv("betas_pfhxs.csv")
}
attach(betas)
betas %>% filter(Confidence == Confidence[Study == "Kwon, 2016"])
betas %>% filter(!(Study == "Kwon, 2016"))# %>% filter(Confidence == Confidence[Study == "Kwon, 2016"])
betas %>% filter(!(Study == "Kwon, 2016")) %>% filter(Confidence == Confidence[Study == "Kwon, 2016"])
betas %>% filter(Confidence == Confidence[Study == "Kwon, 2016"]) %>% filter(!(Study == "Kwon, 2016"))
if (pfas_type == "PFNA") {
print_results("Medium w/o Kwon, 2016", rma_kwon[[4]], betas %>% filter(Confidence == Confidence[Study == "Kwon, 2016"]) %>% filter(!(Study == "Kwon, 2016"))) %>% kable(format = 'pandoc')
} else {
print(sprintf("PFNA is not the chemical of interest; this analysis is not needed for %s.", pfas_type))
}
if (pfas_type == "PFNA") {
betas_kwon <- read.csv("betas_pfna_kwon_options.csv")
rma_kwon <- list(log_e = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))),
log_2 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))),
log_10 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)"))),
medium = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(!(Study == "Kwon, 2016")), subset = Confidence == Confidence[Study == "Kwon, 2016"] ))
}
betas %>% filter(!(Study == "Kwon, 2016")), subset = Confidence == Confidence[Study == "Kwon, 2016"] )
if (pfas_type == "PFNA") {
betas_kwon <- read.csv("betas_pfna_kwon_options.csv")
rma_kwon <- list(log_e = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/ln(ng/ml)"))),
log_2 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log2(ng/ml)"))),
log_10 = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas_kwon %>% filter(!(Study == "Kwon, 2016" & BetaUnit != "g/log10(ng/ml)"))),
medium = rma(yi = BetaLnNgml, sei = BetaLnNgmlSE, data = betas %>% filter(Confidence == Confidence[Study == "Kwon, 2016"]) %>% filter(!(Study == "Kwon, 2016"))))
}
if (pfas_type == "PFNA") {
print_results("Medium w/o Kwon, 2016", rma_kwon[[4]], betas %>% filter(Confidence == Confidence[Study == "Kwon, 2016"]) %>% filter(!(Study == "Kwon, 2016"))) %>% kable(format = 'pandoc')
} else {
print(sprintf("PFNA is not the chemical of interest; this analysis is not needed for %s.", pfas_type))
}
# PFNA data pre-processing
library(readxl)
library(tidyr)
library(tidyverse)
library(dplyr)
library(metafor)
library(meta)
library(knitr)
library(kableExtra)
library(ggplot2)
library(RColorBrewer)
setwd("C:/Users/alarsen/OneDrive - Environmental Protection Agency (EPA)/Projects/IRIS/PFAS/pfas-birthweight-meta-analysis")
source("utility_functions.R")
# Primary data set -------------------------------------------------------------
betas <- read_excel("PFNA_Unit_Conversion_v6.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
mutate(across(c("Study", "Year"), str_replace, " Boy", "a")) %>%
mutate(across(c("Study", "Year"), str_replace, " Girl", "b")) %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
# pool studies that report boys and girls separately
betas <- betas %>%
pool_studies("Lind") %>%
pool_studies("Robledo") %>%
pool_studies("Wang")
# join sample timing data to betas
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas <- betas  %>%     ## PFNA
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3))
write.csv(betas, "betas_pfna.csv", row.names = F)
# Data set for Sensitivity Analysis on Kwon, 2016 ------------------------------
betas_kwon <- read_excel("PFNA_Unit_Conversion_v2_kwon_options.xlsx") %>%
as.data.frame() %>%
select(c("Study2", "Sample Size", "Population", "Confidence",
"BetaOrig", "BetaOrigLCL", "BetaOrigUCL", "BetaUnit",
"BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL",
"BetaLnNgml", "BetaLnNgmlSE", "BetaLnNgmlLCL", "BetaLnNgmlUCL")) %>%
rename(Study = Study2, Sample.Size = `Sample Size`) %>%
separate(col = Study, into = c("Author", "Year"), sep = ",", remove = F) %>%
filter(Author == "Kwon" & BetaUnit != "g/ln(ng/ml)") %>%
mutate(Confidence = factor(Confidence, levels = c("High", "Medium", "Low")),
Population = factor(Population)) %>%
mutate_at(c("BetaNgml", "BetaNgmlSE", "BetaNgmlLCL", "BetaNgmlUCL"), as.double)
sampling <- read_excel("Sample_Timing.xlsx", sheet = "Sample_Timing") %>%
unite("Study", Author:Year, sep = ", ")
# TODO re-code to take medians over means, etc. if more than one is reported
sampling2 <- sampling %>%
select(Study, Mean:Exact) %>%
pivot_longer(Mean:Exact, names_to = "Summary_Type") %>%
rename(GA = value) %>%
drop_na()
sampling <- left_join(sampling, sampling2, by = "Study")
betas_kwon <- betas_kwon %>%
select(!c(Author, Year)) %>%
left_join(sampling[, c("Study", "GA", "Bin", "Sampling_1", "Sampling_2", "Sampling_3")], by = "Study") %>%
mutate(Bin = factor(Bin),
Sampling_1 = factor(Sampling_1),
Sampling_2 = factor(Sampling_2),
Sampling_3 = factor(Sampling_3)) %>%
bind_rows(read.csv("betas_pfna.csv"))
write.csv(betas_kwon, "betas_pfna_kwon_options.csv")
